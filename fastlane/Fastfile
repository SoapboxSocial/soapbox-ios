# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

app_identifier = "app.social.soapbox"
xcodeproj = "Soapbox.xcodeproj"
workspace = "Soapbox.xcworkspace"
scheme = "Soapbox"
output_name = "Soapbox.ipa"
codesigning_identity = "Apple Distribution: Dean Eigenmann (Z9LC5GZ33U)"

platform :ios do
  desc "Push a new release build to the App Store"
  lane :release do

    ensure_git_status_clean
    ensure_git_branch(branch: "master")

    update_code_signing_settings(use_automatic_signing: false, path: xcodeproj)

    match(
      app_identifier: app_identifier,
      type: "appstore"
    )

    update_project_provisioning(
      xcodeproj: xcodeproj,
      target_filter: scheme,
      profile: ENV["sigh_app.social.soapbox_appstore_profile-path"],
      build_configuration: "Release"
    )

    current = get_version_number(xcodeproj: xcodeproj)
    increment_version_number(version_number: current)

    UI.message "current version is #{current}"
    type = UI.select("What type of release is this?: ", ["major", "minor", "patch"])

    version = increment_version_number(bump_type: type, xcodeproj: xcodeproj)

    increment_build_number({
      build_number: 1
    })

    gym(
      workspace: workspace,
      scheme: scheme,
      configuration: "Release",
      clean: true,
      export_method: "app-store",
      output_directory:"./build/",
      export_options: {
        method: "app-store",
        provisioningProfiles: {
            app_identifier => ENV["sigh_app.social.soapbox_appstore_profile-name"]
        }
      },
      codesigning_identity: codesigning_identity,
      output_name: output_name
    )

    upload_to_app_store(force: true, overwrite_screenshots: true)

    changelog = read_changelog(section_identifier: '[Unreleased]')
    stamp_changelog(section_identifier: "#{version}")
    set_changelog(changelog: changelog, version: version)

    git_commit(path: ["*.md", "Info.plist"], message: "Release v#{version}")

    add_git_tag(tag: "v#{version}", sign: true)

    push_to_git_remote(tags: true)
  end

  lane :beta do
    desc "Push a new build to the TestFlight"

    #ensure_git_status_clean
    #ensure_git_branch(branch: "master")

    update_code_signing_settings(use_automatic_signing: false, path: xcodeproj)

    match(
      app_identifier: app_identifier,
      type: "appstore"
    )

    update_project_provisioning(
      xcodeproj: xcodeproj,
      target_filter: scheme,
      profile: ENV["sigh_app.social.soapbox_appstore_profile-path"],
      build_configuration: "Release"
    )

    build_number = latest_testflight_build_number + 1

    increment_build_number({
      build_number: build_number
    })

    gym(
      workspace: workspace,
      scheme: scheme,
      configuration: "Release",
      clean: true,
      export_method: "app-store",
      output_directory:"./build/",
      export_options: {
        method: "app-store",
        provisioningProfiles: {
            app_identifier => ENV["sigh_app.social.soapbox_appstore_profile-name"]
        }
      },
      codesigning_identity: codesigning_identity,
      output_name: output_name
    )
    
    upload_to_testflight(distribute_external: true, groups: ["Link", "External", "Airport"])
  end
end
